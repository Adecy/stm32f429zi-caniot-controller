#include "dt-bindings/pinctrl/stm32-pinctrl-common.h"

&can1 {
        status = "okay";
        pinctrl-names  = "default";
        pinctrl-0 = <&can1_rx_pd0 &can1_tx_pd1>;
        bus-speed = <500000>;

        sample-point = <875>; /* recommended value */
        sjw = <0x1>;
};

/ {
        aliases {
                led-net = &green_led_1;
                led-thread = &red_led_1;
                led-can = &blue_led_1;
                sw0 = &user_button;

		ipc-uart = &uart7;
		ipc-uart-7 = &uart7;
		ipc-uart-8 = &uart8;
        };

        soc {
		// ahb1
		crc1: crc@40023000 {
			compatible = "st,stm32-crc";
			reg = <0x40023000 0x400>;
			label = "STM32_CRC";
			status = "okay"; // okay
		};
	};
};

/* order matters */
/delete-node/ &boot_partition;
/delete-node/ &storage_partition;
/delete-node/ &slot0_partition;
/delete-node/ &slot1_partition;
/delete-node/ &scratch_partition;

&flash0 {
        // flash size is 0x200000
        partitions {
                compatible = "fixed-partitions";
                #address-cells = <0x1>;
                #size-cells = <0x1>;
                /* 64KB for bootloader */
                boot_partition: partition@0 {
                        label = "mcuboot";
                        reg = <0x0 DT_SIZE_K(64)>;
                        read-only;
                };
                /* Credentials partition */
                credentials_partition: partition@10000 {
                        label = "credentials";
                        reg = <0x00010000 DT_SIZE_K(64)>;
                };
		/* application image slot: 896KB = 7*128KB */
		slot0_partition: partition@20000 {
			label = "image-0";
			reg = <0x00020000 DT_SIZE_K(768)>; /* 6 * 128KB sectors */
		};
                /* The scratch area must have a size that is enough to store at 
                 * least the largest sector that is going to be swapped */
                /* swap slot: 128Kb */
                scratch_partition: partition@e0000 {
			label = "image-scratch";
			reg = <0x00e0000 DT_SIZE_K(128)>;
		};
                storage_partition: partition@100000 {
			label = "storage";
			reg = <0x00100000 DT_SIZE_K(64)>;
		};
                misc1: partition@110000 {
			label = "misc1";
			reg = <0x00110000 DT_SIZE_K(64)>;
		};
		/* backup slot: 768KB = 6*128KB */
		slot1_partition: partition@120000 {
			label = "image-1";
			reg = <0x00120000 DT_SIZE_K(768)>;
		};
                misc2: partition@1e0000 {
			label = "misc2";
			reg = <0x001e0000 DT_SIZE_K(128)>;
		};
        };
};

/* SPI SD card controller
 *
 * https://github.com/zephyrproject-rtos/zephyr/issues/35561
 * For 2.7.2 / 3.0.0, it seems to change a bit with 3.1.0
 */
&spi3 {
        status = "okay";
        cs-gpios = <&gpiod 2 GPIO_ACTIVE_LOW>;
        pinctrl-0 = < &spi3_sck_pc10 &spi3_miso_pc11 &spi3_mosi_pc12 >;
        pinctrl-names = "default";
        
        /* SPI device 0 */
        sdhc0: sdhc@0 {
                compatible = "zephyr,sdhc-spi-slot"; /* formerly zephyr,mmc-spi-slot */
                reg = <0>;
                status = "okay";
                spi-max-frequency = <24000000>;  // 24000000, 400000
		mmc {
			compatible = "zephyr,sdmmc-disk";
			status = "okay";
		};
        };
};

/**
 * https: //docs.zephyrproject.org/2.7.0/reference/devicetree/bindings/pwm/st,stm32-pwm.html
 *
 * According to UM1974 (page 24) and "STM32F427xx STM32F429xx product datasheet" page 76
 * 
 * - LD1 (green user led) is connected to PB0
 * 	- AF1 (alternate function 1) : TIM1_CH2N
 * 	- AF2 : TIM3_CH3 (choosen)
 * 	- AF3 : TIM8_CH2N
 * - LD2 (blue user led) is connected to PB7
 * 	- AF2 : TIM4_CH2 (choosen)
 * - LD3 (red user led) is connected to PB14
 * 	- AF1: TIM1_CH2N
 * 	- AF3 : TIM8_CH2N (choosen)
 * 
 * - "These user LEDs are on when the I/O is HIGH value, and are off when the I/O is LOW."
 * 
 * - https://docs.zephyrproject.org/2.7.0/reference/devicetree/bindings/pwm/st,stm32-pwm.html
 */
&timers3 {
        status = "okay";
        st,prescaler = <8399>; /* depreciated, should be moved 1 layer above (i.e. to timers3) */
        tim3pwm: pwm {
                pinctrl-names  = "default";
                status = "okay";
                pinctrl-0 = <&tim3_ch3_pb0>;
        };
};

&timers4 {
        status = "okay";
        st,prescaler = <8399>; /* depreciated */
        tim4pwm: pwm {
                pinctrl-names  = "default";
                status = "okay";
                pinctrl-0 = <&tim4_ch2_pb7>;
        };
};

/* complementary pwm channels not supported by st,stm32-pwm for now 
 * Read : https://github.com/zephyrproject-rtos/zephyr/issues/38629
 */

/*
&timers8 {
        status = "okay";
        st,prescaler = <8399>;  // depreciated
        tim8pwm: pwm {
                status = "okay";
                pinctrl-0 = < &tim8_ch2n_pb14 >; // <&tim8_ch2n_pb14 &tim8_ch2_pc7>; STM32_PINMUX('B', 14, AF3)
        };
};
*/

/ {
        pwmleds {
                compatible = "pwm-leds";
                green_pwm_led: led_pwm_0 {
                        status = "okay";
                        pwms = <&tim3pwm 0x03 1000000 PWM_POLARITY_NORMAL>;
                };
                blue_pwm_led: led_pwm_1 {
                        status = "okay";
                        pwms = <&tim4pwm 0x02 1000000 PWM_POLARITY_NORMAL>;
                };
                /*
                red_pwm_led: led_pwm_2 {
                        status = "okay";
                        pwms = <&tim8pwm 0x02 1000000 PWM_POLARITY_NORMAL>;
                };
                */
        };
};

/*
Sample application : https://github.com/zephyrproject-rtos/zephyr/tree/main/samples/sensor/stm32_temp_sensor/boards
 */
/ {
        stm-temp {
                compatible = "st,stm32-temp";
                io-channels = < &adc1 18 >;
                // ts-voltage-mv = < 3300 >;
                avgslope = < 25 >;
                v25 = < 760 >;
                status = "okay";
        };
};

/* platformio doesn't show the correct FLASH usage 
 * when using overlay with custom partitions
 * 
 * Morever pio doesn't show CCM usage;
 */
/ {
        chosen {
                zephyr,code-partition = &slot0_partition;
        };
};

/ {
        chosen {
                zephyr,console = &usart3;
                zephyr,shell-uart = &usart3;
        };
};

&mac {
        local-mac-address = [00 00 00 77 77 77];
        status = "okay"; /* Set to disable to use USB interface only */
};


/* BLE HCI interface */
&spi4 {
        status = "okay";
        cs-gpios = <&gpioe 4 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        pinctrl-0 = <&spi4_sck_pe2 &spi4_miso_pe5 &spi4_mosi_pe6>;
        pinctrl-names = "default";

        /* RM0090 rev 19 page 307-308/1751 : DMA1
	 * UART8_TX chan 5 stream 0
	 * UART8_RX chan 5 stream 6
         */

	/* <&dma stream-slot channel channel-config features */

        /* TX DMA 2 stream slot 4 channel 5 MEM (inc) to PERIPH (inc), prio high
         * RX DMA 2 stream slot 5 channel 5 PERIPH (inc) to MEM (inc), prio high
         */
        dmas = <&dma2 4 5 0x20440 0x03 
                &dma2 3 5 0x20480 0x03>;
        dma-names = "tx", "rx";

        hci@0 {
                compatible = "zephyr,bt-hci-spi";
                reg = <0>;
                irq-gpios = <&gpioe 3 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
                reset-gpios = <&gpiog 3 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
                spi-max-frequency = <2000000>; /* 2MHz */
        };
};

&dma2 {
	status = "okay";
};

&gpiog {
        status = "okay";
};

/* Second can bus isn't supported yet */
// &can2 {
//         status = "okay";
//         bus-speed = < 500000 >;
// };

&zephyr_udc0 {
        status = "okay";
        usb_cdc_acm_uart: cdc-acm-uart {
                compatible = "zephyr,cdc-acm-uart";
        };
};
